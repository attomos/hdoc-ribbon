class Ribbon extends HTMLElement{constructor(){super();const e=this.attachShadow({mode:"open"});this._theme={borderColor:"#ababab",backgroundColor:"#ffffff",borderHoverColor:"#29008a",backgroundHoverColor:"#dacaff"},this.wrapper=document.createElement("a"),this.wrapper.classList.add("wrapper"),this.span=document.createElement("span"),this.span.classList.add("content");const t=this.initStyleElement(this._theme);e.appendChild(t),this.wrapper.appendChild(this.span),e.appendChild(this.wrapper)}static get observedAttributes(){return["position"]}attributeChangedCallback(e,t,s){if(e==="position"&&t&&t!==s){const o=this.wrapper.classList;o.remove(t),o.add(s)}}connectedCallback(){const e=this.getAttribute("position");this.wrapper.classList.add(e);const t=this.getAttribute("data-day");this.span.innerText=`Day ${t} #100DaysOfCode`;const s=this.getAttribute("href");this.wrapper.setAttribute("href",s),this.wrapper.setAttribute("target","_blank")}get theme(){return this._theme}set theme(e){const t=Object.assign(this._theme,e);this._theme=t,this.updateStyle(this)}updateStyle(e){const t=e.shadowRoot;t.querySelector("style").textContent=this.getStyleContent(this.theme)}initStyleElement(e){const t=document.createElement("style");return t.textContent=this.getStyleContent(e),t}getStyleContent({borderColor:e,backgroundColor:t,backgroundHoverColor:s,borderHoverColor:o}){return`
.wrapper {
  border: 2px solid ${e};
  background-color: ${t};
  color: black;
  position: absolute;
  width: 20em;
  height: 2.5em;
  display: flex;
  text-decoration: none;
  font-weight: bold;
  opacity: 1;
}

.wrapper:hover {
  background-color: ${s};
  border-top: 2px solid ${o};
  border-bottom: 2px solid ${o};
}

.right {
  top: 4em;
  right: -5em;
  transform: rotate(45deg);
}

.left {
  top: 4em;
  left: -5em;
  transform: rotate(315deg);
}

.content {
  font-family: Arial;
  margin: 0 auto;
  display: flex;
  align-items: center;
}
`}}customElements.define("hdoc-ribbon",Ribbon);
